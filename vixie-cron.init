#! /bin/sh
#
# crond          Start/Stop the cron clock daemon.
#
# chkconfig:	2345 40 60
# description:	cron is a standard UNIX program that runs user-specified \
#		programs at periodic scheduled times. vixie cron adds a \
#		number of features to the basic UNIX cron, including better \
#		security and more powerful configuration options.
# description(es): cron es un programa UNIX patrСn que ejecuta comandos \
#               especificados por el usuario a horas programadas. \
#               Vixie cron aЯade una serie de caracterМsticas al cron \
#               bАsico, incluyendo seguridad mejorada y opciones de configuraciСn \
#               mАs poderosas.
# description(pt_BR): cron И um programa UNIX padrЦo que executa comandos \
#              especificados pelo usuАrio em horАrios agendados. \
#              O Vixie cron adiciona uma sИrie de caracterМsticas ao cron \
#              bАsico, incluindo seguranГa melhorada e opГУes de configuraГЦo \
#              mais poderosas.
# description(ru): cron - это стандартная для UNIX программа, запускающая \
#              заданные пользователем программы по расписанию. vixie cron \
#              добавляет к стандартному UNIX cron'у новые опции, включая \
#              повышенную безопасность и более мощные опции конфигурации.
# description(uk): cron - це стандартна для UNIX програма, яка запуска╓ \
#              задан╕ користувачем програми за розкладом. vixie cron \
#              дода╓ до стандартного UNIX cron'у нов╕ опц╕╖, включаючи \
#              п╕двищену безпечн╕сть та б╕льш потужн╕ опц╕╖ конф╕гурац╕╖.
#
# processname:	crond
# config:	/etc/crontab
# pidfile:	/var/run/crond.pid


# Source function library.
. /etc/rc.d/init.d/functions

# Get service config
[ -f /etc/sysconfig/cron ] && . /etc/sysconfig/cron


# See how we were called.
case "$1" in
  start)
	# Check if the service is already running?
	if [ ! -f /var/lock/subsys/crond ]; then
		msg_starting "Vixie cron"
		daemon crond </dev/null
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/crond
	else
		msg_already_running "Vixie cron"
		exit 1
	fi
	;;
  stop)
	if [ -f /var/lock/subsys/crond ]; then
		msg_stopping "Vixie cron"
		killproc crond
		rm -f /var/lock/subsys/crond
	else
		msg_not_running "Vixie cron"
		exit 1
	fi
	;;
  status)
	status crond
	;;
  restart)
	$0 stop
	$0 start
	;;
  reload)
	if [ -f /var/lock/subsys/crond ]; then
		msg_reloading
		busy
		killproc crond -HUP
		RETVAL=$?
	else
		msg_not_running "Vixie cron"
		exit 1
	fi
	;;
  force-reload)
  	# if program allows reloading without stopping
	$0 reload
	exit $?

	# or if it doesn't
	$0 stop && $0 start
	exit $?
	;;
  *)
	echo "Usage: $0 {start|stop|restart|reload|force-reload|status}"
	exit 1
	;;
esac

exit $RETVAL
