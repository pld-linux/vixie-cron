diff -uNr vixie-cron-4.1.p23/cron.8 vixie-cron-4.1/cron.8
--- vixie-cron-4.1.p23/cron.8	2005-07-24 22:34:43.000000000 +0200
+++ vixie-cron-4.1/cron.8	2005-07-25 00:38:08.000000000 +0200
@@ -33,7 +33,8 @@
 should be started from /etc/rc or /etc/rc.local.  It will return immediately,
 so you don't need to start it with '&'.  The \-n option changes this default
 behavior causing it to run in the foreground.  This can be useful when 
-starting it out of init.
+starting it out of init. For backward compatibility, the  \-f option exists
+as an alias to \-n, but it's usage is deprecated and not recommended.
 .PP
 .I Cron
 searches /var/spool/cron for crontab files which are named after accounts in
diff -uNr vixie-cron-4.1.p23/cron.c vixie-cron-4.1/cron.c
--- vixie-cron-4.1.p23/cron.c	2005-07-24 23:59:50.000000000 +0200
+++ vixie-cron-4.1/cron.c	2005-07-25 00:37:04.000000000 +0200
@@ -48,7 +48,7 @@
 usage(void) {
 	const char **dflags;
 
-	fprintf(stderr, "usage:  %s [-n] [-x [", ProgramName);
+	fprintf(stderr, "usage:  %s [-f] [-n] [-x [", ProgramName);
 	for (dflags = DebugFlagNames; *dflags; dflags++)
 		fprintf(stderr, "%s%s", *dflags, dflags[1] ? "," : "]");
 	fprintf(stderr, "]\n");
@@ -434,7 +434,7 @@
 parse_args(int argc, char *argv[]) {
 	int argch;
 
-	while (-1 != (argch = getopt(argc, argv, "nx:"))) {
+	while (-1 != (argch = getopt(argc, argv, "fnx:"))) {
 		switch (argch) {
 		default:
 			usage();
@@ -442,6 +442,9 @@
 			if (!set_debug_flags(optarg))
 				usage();
 			break;
+		case 'f':
+			fprintf(stderr, "Warning: the -f option is deprecated. Use -n instead.\n");
+			/* fall-trough */
 		case 'n':
 			NoFork = 1;
 			break;
